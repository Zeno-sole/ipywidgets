From 106ac7ada22d19a956351b72f07699e62cc31954 Mon Sep 17 00:00:00 2001
From: Ximin Luo <infinity0@debian.org>
Date: Wed, 12 Apr 2017 14:56:49 +0200
Subject: Import specific @jupyterlab/service types so we only have to bundle
 those

---
 jupyter-js-widgets/src/manager-base.ts  | 11 +++++++----
 jupyter-js-widgets/src/services-shim.ts |  2 +-
 2 files changed, 8 insertions(+), 5 deletions(-)

diff --git a/jupyter-js-widgets/src/manager-base.ts b/jupyter-js-widgets/src/manager-base.ts
index 5ab6a6c..105f5c5 100644
--- a/jupyter-js-widgets/src/manager-base.ts
+++ b/jupyter-js-widgets/src/manager-base.ts
@@ -5,7 +5,10 @@ import * as _ from 'underscore';
 import * as utils from './utils';
 import * as semver from 'semver';
 import * as Backbone from 'backbone';
-import * as services from '@jupyterlab/services';
+
+import {
+    KernelMessage
+} from '@jupyterlab/services/lib/kernel/messages';
 
 import {
     WidgetModel
@@ -103,7 +106,7 @@ abstract class ManagerBase<T> {
     /**
      * Display a view for a particular model.
      */
-    display_model(msg: services.KernelMessage.IMessage, model: Backbone.Model, options: any): Promise<T> {
+    display_model(msg: KernelMessage.IMessage, model: Backbone.Model, options: any): Promise<T> {
         options = options || {};
         return this.create_view(model, options).then(_.bind(function(view) {
             return this.display_view(msg, view, options);
@@ -117,7 +120,7 @@ abstract class ManagerBase<T> {
      * This must be implemented by a subclass. The implementation must trigger the view's displayed
      * event after the view is on the page: `view.trigger('displayed')`
      */
-    abstract display_view(msg: services.KernelMessage.IMessage, view: Backbone.View<Backbone.Model>, options: any): Promise<T>;
+    abstract display_view(msg: KernelMessage.IMessage, view: Backbone.View<Backbone.Model>, options: any): Promise<T>;
 
     /**
      * Modifies view options. Generally overloaded in custom widget manager
@@ -184,7 +187,7 @@ abstract class ManagerBase<T> {
     /**
      * Handle when a comm is opened.
      */
-    handle_comm_open(comm: shims.services.Comm, msg: services.KernelMessage.ICommOpenMsg): Promise<Backbone.Model> {
+    handle_comm_open(comm: shims.services.Comm, msg: KernelMessage.ICommOpenMsg): Promise<Backbone.Model> {
         return this.new_model({
             model_name: msg.content.data['_model_name'],
             model_module: msg.content.data['_model_module'],
diff --git a/jupyter-js-widgets/src/services-shim.ts b/jupyter-js-widgets/src/services-shim.ts
index 80cf400..2929429 100644
--- a/jupyter-js-widgets/src/services-shim.ts
+++ b/jupyter-js-widgets/src/services-shim.ts
@@ -11,7 +11,7 @@ import * as _ from 'underscore';
 import * as utils from './utils';
 import {
     Kernel
-} from '@jupyterlab/services';
+} from '@jupyterlab/services/lib/kernel/kernel';
 
 export
 namespace shims {
